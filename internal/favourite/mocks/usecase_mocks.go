// Code generated by MockGen. DO NOT EDIT.
// Source: usecase.go

// Package mock_favourite is a generated GoMock package.
package mocks

import (
	errors "github.com/go-park-mail-ru/2020_2_Slash/internal/helpers/errors"
	models "github.com/go-park-mail-ru/2020_2_Slash/internal/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockFavouriteUsecase is a mock of FavouriteUsecase interface
type MockFavouriteUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockFavouriteUsecaseMockRecorder
}

// MockFavouriteUsecaseMockRecorder is the mock recorder for MockFavouriteUsecase
type MockFavouriteUsecaseMockRecorder struct {
	mock *MockFavouriteUsecase
}

// NewMockFavouriteUsecase creates a new mock instance
func NewMockFavouriteUsecase(ctrl *gomock.Controller) *MockFavouriteUsecase {
	mock := &MockFavouriteUsecase{ctrl: ctrl}
	mock.recorder = &MockFavouriteUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockFavouriteUsecase) EXPECT() *MockFavouriteUsecaseMockRecorder {
	return m.recorder
}

// Create mocks base method
func (m *MockFavouriteUsecase) Create(favourite *models.Favourite) *errors.Error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", favourite)
	ret0, _ := ret[0].(*errors.Error)
	return ret0
}

// Create indicates an expected call of Create
func (mr *MockFavouriteUsecaseMockRecorder) Create(favourite interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockFavouriteUsecase)(nil).Create), favourite)
}

// GetUserFavourites mocks base method
func (m *MockFavouriteUsecase) GetUserFavourites(userID uint64, pagination *models.Pagination) (*models.FavouritesResult, *errors.Error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserFavourites", userID, pagination)
	ret0, _ := ret[0].(*models.FavouritesResult)
	ret1, _ := ret[1].(*errors.Error)
	return ret0, ret1
}

// GetUserFavourites indicates an expected call of GetUserFavourites
func (mr *MockFavouriteUsecaseMockRecorder) GetUserFavourites(userID, pagination interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserFavourites", reflect.TypeOf((*MockFavouriteUsecase)(nil).GetUserFavourites), userID, pagination)
}

// Delete mocks base method
func (m *MockFavouriteUsecase) Delete(favourite *models.Favourite) *errors.Error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", favourite)
	ret0, _ := ret[0].(*errors.Error)
	return ret0
}

// Delete indicates an expected call of Delete
func (mr *MockFavouriteUsecaseMockRecorder) Delete(favourite interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockFavouriteUsecase)(nil).Delete), favourite)
}
